openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'SIMPLESHOP'
  description: 'this is a simple api.'
  termsOfService: www.sample.com/terms-of-use
  contact:
    name: xkfx
    url: https://www.cnblogs.com/xkxf/
    email: wyzxkfx@gmail.com
  license:
    name: DIY License
    url: https://www.sample.com/license

servers:
  - url: http://localhost:8080/test/api/v1
    description: Dev server

  - url: https://www.sample.com/api/v1
    description: Prod server

paths:
  /sessions:
    post:
      description: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-login'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User-login'
      responses:
        200:
          description: Login success
        400:
          description: Login fail 

  /sessions/{username}:
    get:
      description: Obtain infomation about sessions from the memory
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user
          schema:
            type: string
            example: admin123

      responses:
        200:
          description: Successful pull of sessions info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
    
  /users:
    post:
      description: Creates a new user in data base
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-register'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User-register'
      responses:
        201:
          description: Successful created a new user
        400:
          description: Registration failed

  /users/{username}:
    get:
      description: Obtain infomation about users from the database
      parameters:
        - in: path
          name: username
          required: true
          description: The username of the user
          schema:
            type: string
            example: zhang

      responses:
        200:
          description: Successful pull of user info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleUsers'

components:
  schemas:
    Session:
      description: login info
      properties:
        id:
          type: string
          example: The shopping cart        
          
    SimpleUsers:
      description: Array of user info
      type: array
      items:
        $ref: '#/components/schemas/User'

    SimpleUser:
      description: Model containing user info
      properties:
        id:
          type: integer
          example: 10001

        username:
          type: string
          example: admin

        type:
          type: integer
          example: 1

    SimpleUser-register:
      description: Model containing user-register info
      properties:
        username:
          type: string
          example: admin

        password:
          type: string
          example: abc12345

        type:
          type: integer
          example: 1
          
    SimpleUser-login:
      description: Model containing user-register info
      properties:
        username:
          type: string
          example: admin

        password:
          type: string
          example: abc12345